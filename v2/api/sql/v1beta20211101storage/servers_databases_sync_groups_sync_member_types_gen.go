// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=sql.azure.com,resources=servers_databases_syncgroups_syncmembers,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=sql.azure.com,resources={servers_databases_syncgroups_syncmembers/status,servers_databases_syncgroups_syncmembers/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1beta20211101.Servers_Databases_SyncGroups_SyncMember
// Generator information:
// - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/SyncMembers.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}
type Servers_Databases_SyncGroups_SyncMember struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Servers_Databases_SyncGroups_SyncMember_Spec   `json:"spec,omitempty"`
	Status            Servers_Databases_SyncGroups_SyncMember_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &Servers_Databases_SyncGroups_SyncMember{}

// GetConditions returns the conditions of the resource
func (member *Servers_Databases_SyncGroups_SyncMember) GetConditions() conditions.Conditions {
	return member.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (member *Servers_Databases_SyncGroups_SyncMember) SetConditions(conditions conditions.Conditions) {
	member.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &Servers_Databases_SyncGroups_SyncMember{}

// AzureName returns the Azure name of the resource
func (member *Servers_Databases_SyncGroups_SyncMember) AzureName() string {
	return member.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (member Servers_Databases_SyncGroups_SyncMember) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetResourceScope returns the scope of the resource
func (member *Servers_Databases_SyncGroups_SyncMember) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (member *Servers_Databases_SyncGroups_SyncMember) GetSpec() genruntime.ConvertibleSpec {
	return &member.Spec
}

// GetStatus returns the status of this resource
func (member *Servers_Databases_SyncGroups_SyncMember) GetStatus() genruntime.ConvertibleStatus {
	return &member.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Sql/servers/databases/syncGroups/syncMembers"
func (member *Servers_Databases_SyncGroups_SyncMember) GetType() string {
	return "Microsoft.Sql/servers/databases/syncGroups/syncMembers"
}

// NewEmptyStatus returns a new empty (blank) status
func (member *Servers_Databases_SyncGroups_SyncMember) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &Servers_Databases_SyncGroups_SyncMember_STATUS{}
}

// Owner returns the ResourceReference of the owner, or nil if there is no owner
func (member *Servers_Databases_SyncGroups_SyncMember) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(member.Spec)
	return &genruntime.ResourceReference{
		Group: group,
		Kind:  kind,
		Name:  member.Spec.Owner.Name,
	}
}

// SetStatus sets the status of this resource
func (member *Servers_Databases_SyncGroups_SyncMember) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*Servers_Databases_SyncGroups_SyncMember_STATUS); ok {
		member.Status = *st
		return nil
	}

	// Convert status to required version
	var st Servers_Databases_SyncGroups_SyncMember_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	member.Status = st
	return nil
}

// Hub marks that this Servers_Databases_SyncGroups_SyncMember is the hub type for conversion
func (member *Servers_Databases_SyncGroups_SyncMember) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (member *Servers_Databases_SyncGroups_SyncMember) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: member.Spec.OriginalVersion,
		Kind:    "Servers_Databases_SyncGroups_SyncMember",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1beta20211101.Servers_Databases_SyncGroups_SyncMember
// Generator information:
// - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/SyncMembers.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}
type Servers_Databases_SyncGroups_SyncMemberList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Servers_Databases_SyncGroups_SyncMember `json:"items"`
}

// Storage version of v1beta20211101.Servers_Databases_SyncGroups_SyncMember_Spec
type Servers_Databases_SyncGroups_SyncMember_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName       string  `json:"azureName,omitempty"`
	DatabaseName    *string `json:"databaseName,omitempty"`
	DatabaseType    *string `json:"databaseType,omitempty"`
	OriginalVersion string  `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a sql.azure.com/Servers_Databases_SyncGroup resource
	Owner               *genruntime.KnownResourceReference `group:"sql.azure.com" json:"owner,omitempty" kind:"Servers_Databases_SyncGroup"`
	Password            *string                            `json:"password,omitempty"`
	PropertyBag         genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	ServerName          *string                            `json:"serverName,omitempty"`
	SqlServerDatabaseId *string                            `json:"sqlServerDatabaseId,omitempty"`

	// SyncAgentReference: ARM resource id of the sync agent in the sync member.
	SyncAgentReference *genruntime.ResourceReference `armReference:"SyncAgentId" json:"syncAgentReference,omitempty"`
	SyncDirection      *string                       `json:"syncDirection,omitempty"`

	// SyncMemberAzureDatabaseResourceReference: ARM resource id of the sync member logical database, for sync members in Azure.
	SyncMemberAzureDatabaseResourceReference *genruntime.ResourceReference `armReference:"SyncMemberAzureDatabaseResourceId" json:"syncMemberAzureDatabaseResourceReference,omitempty"`
	UsePrivateLinkConnection                 *bool                         `json:"usePrivateLinkConnection,omitempty"`
	UserName                                 *string                       `json:"userName,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Servers_Databases_SyncGroups_SyncMember_Spec{}

// ConvertSpecFrom populates our Servers_Databases_SyncGroups_SyncMember_Spec from the provided source
func (member *Servers_Databases_SyncGroups_SyncMember_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == member {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(member)
}

// ConvertSpecTo populates the provided destination from our Servers_Databases_SyncGroups_SyncMember_Spec
func (member *Servers_Databases_SyncGroups_SyncMember_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == member {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(member)
}

// Storage version of v1beta20211101.Servers_Databases_SyncGroups_SyncMember_STATUS
type Servers_Databases_SyncGroups_SyncMember_STATUS struct {
	Conditions                        []conditions.Condition `json:"conditions,omitempty"`
	DatabaseName                      *string                `json:"databaseName,omitempty"`
	DatabaseType                      *string                `json:"databaseType,omitempty"`
	Id                                *string                `json:"id,omitempty"`
	Name                              *string                `json:"name,omitempty"`
	Password                          *string                `json:"password,omitempty"`
	PrivateEndpointName               *string                `json:"privateEndpointName,omitempty"`
	PropertyBag                       genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	ServerName                        *string                `json:"serverName,omitempty"`
	SqlServerDatabaseId               *string                `json:"sqlServerDatabaseId,omitempty"`
	SyncAgentId                       *string                `json:"syncAgentId,omitempty"`
	SyncDirection                     *string                `json:"syncDirection,omitempty"`
	SyncMemberAzureDatabaseResourceId *string                `json:"syncMemberAzureDatabaseResourceId,omitempty"`
	SyncState                         *string                `json:"syncState,omitempty"`
	Type                              *string                `json:"type,omitempty"`
	UsePrivateLinkConnection          *bool                  `json:"usePrivateLinkConnection,omitempty"`
	UserName                          *string                `json:"userName,omitempty"`
}

var _ genruntime.ConvertibleStatus = &Servers_Databases_SyncGroups_SyncMember_STATUS{}

// ConvertStatusFrom populates our Servers_Databases_SyncGroups_SyncMember_STATUS from the provided source
func (member *Servers_Databases_SyncGroups_SyncMember_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == member {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(member)
}

// ConvertStatusTo populates the provided destination from our Servers_Databases_SyncGroups_SyncMember_STATUS
func (member *Servers_Databases_SyncGroups_SyncMember_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == member {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(member)
}

func init() {
	SchemeBuilder.Register(&Servers_Databases_SyncGroups_SyncMember{}, &Servers_Databases_SyncGroups_SyncMemberList{})
}
