// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=sql.azure.com,resources=managedinstances,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=sql.azure.com,resources={managedinstances/status,managedinstances/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1beta20211101.ManagedInstance
// Generator information:
// - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/ManagedInstances.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
type ManagedInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagedInstance_Spec   `json:"spec,omitempty"`
	Status            ManagedInstance_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &ManagedInstance{}

// GetConditions returns the conditions of the resource
func (instance *ManagedInstance) GetConditions() conditions.Conditions {
	return instance.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (instance *ManagedInstance) SetConditions(conditions conditions.Conditions) {
	instance.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &ManagedInstance{}

// AzureName returns the Azure name of the resource
func (instance *ManagedInstance) AzureName() string {
	return instance.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (instance ManagedInstance) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetResourceScope returns the scope of the resource
func (instance *ManagedInstance) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (instance *ManagedInstance) GetSpec() genruntime.ConvertibleSpec {
	return &instance.Spec
}

// GetStatus returns the status of this resource
func (instance *ManagedInstance) GetStatus() genruntime.ConvertibleStatus {
	return &instance.Status
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Sql/managedInstances"
func (instance *ManagedInstance) GetType() string {
	return "Microsoft.Sql/managedInstances"
}

// NewEmptyStatus returns a new empty (blank) status
func (instance *ManagedInstance) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &ManagedInstance_STATUS{}
}

// Owner returns the ResourceReference of the owner, or nil if there is no owner
func (instance *ManagedInstance) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(instance.Spec)
	return &genruntime.ResourceReference{
		Group: group,
		Kind:  kind,
		Name:  instance.Spec.Owner.Name,
	}
}

// SetStatus sets the status of this resource
func (instance *ManagedInstance) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*ManagedInstance_STATUS); ok {
		instance.Status = *st
		return nil
	}

	// Convert status to required version
	var st ManagedInstance_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	instance.Status = st
	return nil
}

// Hub marks that this ManagedInstance is the hub type for conversion
func (instance *ManagedInstance) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (instance *ManagedInstance) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: instance.Spec.OriginalVersion,
		Kind:    "ManagedInstance",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1beta20211101.ManagedInstance
// Generator information:
// - Generated from: /sql/resource-manager/Microsoft.Sql/stable/2021-11-01/ManagedInstances.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}
type ManagedInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagedInstance `json:"items"`
}

// Storage version of v1beta20211101.APIVersion
// +kubebuilder:validation:Enum={"2021-11-01"}
type APIVersion string

const APIVersion_Value = APIVersion("2021-11-01")

// Storage version of v1beta20211101.ManagedInstance_Spec
type ManagedInstance_Spec struct {
	AdministratorLogin         *string                               `json:"administratorLogin,omitempty"`
	AdministratorLoginPassword *genruntime.SecretReference           `json:"administratorLoginPassword,omitempty"`
	Administrators             *ManagedInstanceExternalAdministrator `json:"administrators,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName string  `json:"azureName,omitempty"`
	Collation *string `json:"collation,omitempty"`

	// DnsZonePartnerReference: The resource id of another managed instance whose DNS zone this managed instance will share
	// after creation.
	DnsZonePartnerReference    *genruntime.ResourceReference `armReference:"DnsZonePartner" json:"dnsZonePartnerReference,omitempty"`
	Identity                   *ResourceIdentity             `json:"identity,omitempty"`
	InstancePoolId             *string                       `json:"instancePoolId,omitempty"`
	KeyId                      *string                       `json:"keyId,omitempty"`
	LicenseType                *string                       `json:"licenseType,omitempty"`
	Location                   *string                       `json:"location,omitempty"`
	MaintenanceConfigurationId *string                       `json:"maintenanceConfigurationId,omitempty"`
	ManagedInstanceCreateMode  *string                       `json:"managedInstanceCreateMode,omitempty"`
	MinimalTlsVersion          *string                       `json:"minimalTlsVersion,omitempty"`
	OriginalVersion            string                        `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a resources.azure.com/ResourceGroup resource
	Owner *genruntime.KnownResourceReference `group:"resources.azure.com" json:"owner,omitempty" kind:"ResourceGroup"`

	// PrimaryUserAssignedIdentityReference: The resource id of a user assigned identity to be used by default.
	PrimaryUserAssignedIdentityReference *genruntime.ResourceReference `armReference:"PrimaryUserAssignedIdentityId" json:"primaryUserAssignedIdentityReference,omitempty"`
	PropertyBag                          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	ProxyOverride                        *string                       `json:"proxyOverride,omitempty"`
	PublicDataEndpointEnabled            *bool                         `json:"publicDataEndpointEnabled,omitempty"`
	RequestedBackupStorageRedundancy     *string                       `json:"requestedBackupStorageRedundancy,omitempty"`
	RestorePointInTime                   *string                       `json:"restorePointInTime,omitempty"`
	ServicePrincipal                     *ServicePrincipal             `json:"servicePrincipal,omitempty"`
	Sku                                  *Sku                          `json:"sku,omitempty"`

	// SourceManagedInstanceReference: The resource identifier of the source managed instance associated with create operation
	// of this instance.
	SourceManagedInstanceReference *genruntime.ResourceReference `armReference:"SourceManagedInstanceId" json:"sourceManagedInstanceReference,omitempty"`
	StorageSizeInGB                *int                          `json:"storageSizeInGB,omitempty"`

	// SubnetReference: Subnet resource ID for the managed instance.
	SubnetReference *genruntime.ResourceReference `armReference:"SubnetId" json:"subnetReference,omitempty"`
	Tags            map[string]string             `json:"tags,omitempty"`
	TimezoneId      *string                       `json:"timezoneId,omitempty"`
	VCores          *int                          `json:"vCores,omitempty"`
	ZoneRedundant   *bool                         `json:"zoneRedundant,omitempty"`
}

var _ genruntime.ConvertibleSpec = &ManagedInstance_Spec{}

// ConvertSpecFrom populates our ManagedInstance_Spec from the provided source
func (instance *ManagedInstance_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == instance {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(instance)
}

// ConvertSpecTo populates the provided destination from our ManagedInstance_Spec
func (instance *ManagedInstance_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == instance {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(instance)
}

// Storage version of v1beta20211101.ManagedInstance_STATUS
// An Azure SQL managed instance.
type ManagedInstance_STATUS struct {
	AdministratorLogin               *string                                      `json:"administratorLogin,omitempty"`
	Administrators                   *ManagedInstanceExternalAdministrator_STATUS `json:"administrators,omitempty"`
	Collation                        *string                                      `json:"collation,omitempty"`
	Conditions                       []conditions.Condition                       `json:"conditions,omitempty"`
	CurrentBackupStorageRedundancy   *string                                      `json:"currentBackupStorageRedundancy,omitempty"`
	DnsZone                          *string                                      `json:"dnsZone,omitempty"`
	DnsZonePartner                   *string                                      `json:"dnsZonePartner,omitempty"`
	FullyQualifiedDomainName         *string                                      `json:"fullyQualifiedDomainName,omitempty"`
	Id                               *string                                      `json:"id,omitempty"`
	Identity                         *ResourceIdentity_STATUS                     `json:"identity,omitempty"`
	InstancePoolId                   *string                                      `json:"instancePoolId,omitempty"`
	KeyId                            *string                                      `json:"keyId,omitempty"`
	LicenseType                      *string                                      `json:"licenseType,omitempty"`
	Location                         *string                                      `json:"location,omitempty"`
	MaintenanceConfigurationId       *string                                      `json:"maintenanceConfigurationId,omitempty"`
	ManagedInstanceCreateMode        *string                                      `json:"managedInstanceCreateMode,omitempty"`
	MinimalTlsVersion                *string                                      `json:"minimalTlsVersion,omitempty"`
	Name                             *string                                      `json:"name,omitempty"`
	PrimaryUserAssignedIdentityId    *string                                      `json:"primaryUserAssignedIdentityId,omitempty"`
	PrivateEndpointConnections       []ManagedInstancePecProperty_STATUS          `json:"privateEndpointConnections,omitempty"`
	PropertyBag                      genruntime.PropertyBag                       `json:"$propertyBag,omitempty"`
	ProvisioningState                *string                                      `json:"provisioningState,omitempty"`
	ProxyOverride                    *string                                      `json:"proxyOverride,omitempty"`
	PublicDataEndpointEnabled        *bool                                        `json:"publicDataEndpointEnabled,omitempty"`
	RequestedBackupStorageRedundancy *string                                      `json:"requestedBackupStorageRedundancy,omitempty"`
	RestorePointInTime               *string                                      `json:"restorePointInTime,omitempty"`
	ServicePrincipal                 *ServicePrincipal_STATUS                     `json:"servicePrincipal,omitempty"`
	Sku                              *Sku_STATUS                                  `json:"sku,omitempty"`
	SourceManagedInstanceId          *string                                      `json:"sourceManagedInstanceId,omitempty"`
	State                            *string                                      `json:"state,omitempty"`
	StorageSizeInGB                  *int                                         `json:"storageSizeInGB,omitempty"`
	SubnetId                         *string                                      `json:"subnetId,omitempty"`
	Tags                             map[string]string                            `json:"tags,omitempty"`
	TimezoneId                       *string                                      `json:"timezoneId,omitempty"`
	Type                             *string                                      `json:"type,omitempty"`
	VCores                           *int                                         `json:"vCores,omitempty"`
	ZoneRedundant                    *bool                                        `json:"zoneRedundant,omitempty"`
}

var _ genruntime.ConvertibleStatus = &ManagedInstance_STATUS{}

// ConvertStatusFrom populates our ManagedInstance_STATUS from the provided source
func (instance *ManagedInstance_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == instance {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(instance)
}

// ConvertStatusTo populates the provided destination from our ManagedInstance_STATUS
func (instance *ManagedInstance_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == instance {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(instance)
}

// Storage version of v1beta20211101.ManagedInstanceExternalAdministrator
// Properties of a active directory administrator.
type ManagedInstanceExternalAdministrator struct {
	AdministratorType         *string                `json:"administratorType,omitempty"`
	AzureADOnlyAuthentication *bool                  `json:"azureADOnlyAuthentication,omitempty"`
	Login                     *string                `json:"login,omitempty"`
	PrincipalType             *string                `json:"principalType,omitempty"`
	PropertyBag               genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Sid                       *string                `json:"sid,omitempty"`
	TenantId                  *string                `json:"tenantId,omitempty"`
}

// Storage version of v1beta20211101.ManagedInstanceExternalAdministrator_STATUS
// Properties of a active directory administrator.
type ManagedInstanceExternalAdministrator_STATUS struct {
	AdministratorType         *string                `json:"administratorType,omitempty"`
	AzureADOnlyAuthentication *bool                  `json:"azureADOnlyAuthentication,omitempty"`
	Login                     *string                `json:"login,omitempty"`
	PrincipalType             *string                `json:"principalType,omitempty"`
	PropertyBag               genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Sid                       *string                `json:"sid,omitempty"`
	TenantId                  *string                `json:"tenantId,omitempty"`
}

// Storage version of v1beta20211101.ManagedInstancePecProperty_STATUS
// A private endpoint connection under a managed instance
type ManagedInstancePecProperty_STATUS struct {
	Id          *string                                                    `json:"id,omitempty"`
	Properties  *ManagedInstancePrivateEndpointConnectionProperties_STATUS `json:"properties,omitempty"`
	PropertyBag genruntime.PropertyBag                                     `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20211101.ResourceIdentity
// Azure Active Directory identity configuration for a resource.
type ResourceIdentity struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1beta20211101.ResourceIdentity_STATUS
// Azure Active Directory identity configuration for a resource.
type ResourceIdentity_STATUS struct {
	PrincipalId            *string                        `json:"principalId,omitempty"`
	PropertyBag            genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	TenantId               *string                        `json:"tenantId,omitempty"`
	Type                   *string                        `json:"type,omitempty"`
	UserAssignedIdentities map[string]UserIdentity_STATUS `json:"userAssignedIdentities,omitempty"`
}

// Storage version of v1beta20211101.ServicePrincipal
// The managed instance's service principal configuration for a resource.
type ServicePrincipal struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1beta20211101.ServicePrincipal_STATUS
// The managed instance's service principal configuration for a resource.
type ServicePrincipal_STATUS struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PrincipalId *string                `json:"principalId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	TenantId    *string                `json:"tenantId,omitempty"`
	Type        *string                `json:"type,omitempty"`
}

// Storage version of v1beta20211101.Sku
// An ARM Resource SKU.
type Sku struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Family      *string                `json:"family,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Size        *string                `json:"size,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

// Storage version of v1beta20211101.Sku_STATUS
// An ARM Resource SKU.
type Sku_STATUS struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Family      *string                `json:"family,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Size        *string                `json:"size,omitempty"`
	Tier        *string                `json:"tier,omitempty"`
}

// Storage version of v1beta20211101.ManagedInstancePrivateEndpointConnectionProperties_STATUS
// Properties of a private endpoint connection.
type ManagedInstancePrivateEndpointConnectionProperties_STATUS struct {
	PrivateEndpoint                   *ManagedInstancePrivateEndpointProperty_STATUS                   `json:"privateEndpoint,omitempty"`
	PrivateLinkServiceConnectionState *ManagedInstancePrivateLinkServiceConnectionStateProperty_STATUS `json:"privateLinkServiceConnectionState,omitempty"`
	PropertyBag                       genruntime.PropertyBag                                           `json:"$propertyBag,omitempty"`
	ProvisioningState                 *string                                                          `json:"provisioningState,omitempty"`
}

// Storage version of v1beta20211101.UserIdentity_STATUS
// Azure Active Directory identity configuration for a resource.
type UserIdentity_STATUS struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PrincipalId *string                `json:"principalId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20211101.ManagedInstancePrivateEndpointProperty_STATUS
type ManagedInstancePrivateEndpointProperty_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20211101.ManagedInstancePrivateLinkServiceConnectionStateProperty_STATUS
type ManagedInstancePrivateLinkServiceConnectionStateProperty_STATUS struct {
	ActionsRequired *string                `json:"actionsRequired,omitempty"`
	Description     *string                `json:"description,omitempty"`
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Status          *string                `json:"status,omitempty"`
}

func init() {
	SchemeBuilder.Register(&ManagedInstance{}, &ManagedInstanceList{})
}
