// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101

// An Azure SQL managed instance.
type ManagedInstance_STATUS_ARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`

	// Identity: The Azure Active Directory identity of the managed instance.
	Identity *ResourceIdentity_STATUS_ARM `json:"identity,omitempty"`

	// Location: Resource location.
	Location *string `json:"location,omitempty"`

	// Name: Resource name.
	Name *string `json:"name,omitempty"`

	// Properties: Resource properties.
	Properties *ManagedInstanceProperties_STATUS_ARM `json:"properties,omitempty"`

	// Sku: Managed instance SKU. Allowed values for sku.name: GP_Gen5, GP_G8IM, GP_G8IH, BC_Gen5, BC_G8IM, BC_G8IH
	Sku *Sku_STATUS_ARM `json:"sku,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	// Type: Resource type.
	Type *string `json:"type,omitempty"`
}

// The properties of a managed instance.
type ManagedInstanceProperties_STATUS_ARM struct {
	// AdministratorLogin: Administrator username for the managed instance. Can only be specified when the managed instance is
	// being created (and is required for creation).
	AdministratorLogin *string `json:"administratorLogin,omitempty"`

	// Administrators: The Azure Active Directory administrator of the server.
	Administrators *ManagedInstanceExternalAdministrator_STATUS_ARM `json:"administrators,omitempty"`

	// Collation: Collation of the managed instance.
	Collation *string `json:"collation,omitempty"`

	// CurrentBackupStorageRedundancy: The storage account type used to store backups for this instance. The options are Local
	// (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage)
	CurrentBackupStorageRedundancy *ManagedInstanceProperties_CurrentBackupStorageRedundancy_STATUS `json:"currentBackupStorageRedundancy,omitempty"`

	// DnsZone: The Dns Zone that the managed instance is in.
	DnsZone *string `json:"dnsZone,omitempty"`

	// DnsZonePartner: The resource id of another managed instance whose DNS zone this managed instance will share after
	// creation.
	DnsZonePartner *string `json:"dnsZonePartner,omitempty"`

	// FullyQualifiedDomainName: The fully qualified domain name of the managed instance.
	FullyQualifiedDomainName *string `json:"fullyQualifiedDomainName,omitempty"`

	// InstancePoolId: The Id of the instance pool this managed server belongs to.
	InstancePoolId *string `json:"instancePoolId,omitempty"`

	// KeyId: A CMK URI of the key to use for encryption.
	KeyId *string `json:"keyId,omitempty"`

	// LicenseType: The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and
	// 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
	LicenseType *ManagedInstanceProperties_LicenseType_STATUS `json:"licenseType,omitempty"`

	// MaintenanceConfigurationId: Specifies maintenance configuration id to apply to this managed instance.
	MaintenanceConfigurationId *string `json:"maintenanceConfigurationId,omitempty"`

	// ManagedInstanceCreateMode: Specifies the mode of database creation.
	// Default: Regular instance creation.
	// Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and
	// SourceManagedInstanceId must be specified.
	ManagedInstanceCreateMode *ManagedInstanceProperties_ManagedInstanceCreateMode_STATUS `json:"managedInstanceCreateMode,omitempty"`

	// MinimalTlsVersion: Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'
	MinimalTlsVersion *string `json:"minimalTlsVersion,omitempty"`

	// PrimaryUserAssignedIdentityId: The resource id of a user assigned identity to be used by default.
	PrimaryUserAssignedIdentityId *string `json:"primaryUserAssignedIdentityId,omitempty"`

	// PrivateEndpointConnections: List of private endpoint connections on a managed instance.
	PrivateEndpointConnections []ManagedInstancePecProperty_STATUS_ARM             `json:"privateEndpointConnections,omitempty"`
	ProvisioningState          *ManagedInstanceProperties_ProvisioningState_STATUS `json:"provisioningState,omitempty"`

	// ProxyOverride: Connection type used for connecting to the instance.
	ProxyOverride *ManagedInstanceProperties_ProxyOverride_STATUS `json:"proxyOverride,omitempty"`

	// PublicDataEndpointEnabled: Whether or not the public data endpoint is enabled.
	PublicDataEndpointEnabled *bool `json:"publicDataEndpointEnabled,omitempty"`

	// RequestedBackupStorageRedundancy: The storage account type to be used to store backups for this instance. The options
	// are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and
	// GeoZone(GeoZoneRedundantStorage)
	RequestedBackupStorageRedundancy *ManagedInstanceProperties_RequestedBackupStorageRedundancy_STATUS `json:"requestedBackupStorageRedundancy,omitempty"`

	// RestorePointInTime: Specifies the point in time (ISO8601 format) of the source database that will be restored to create
	// the new database.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`

	// ServicePrincipal: The managed instance's service principal.
	ServicePrincipal *ServicePrincipal_STATUS_ARM `json:"servicePrincipal,omitempty"`

	// SourceManagedInstanceId: The resource identifier of the source managed instance associated with create operation of this
	// instance.
	SourceManagedInstanceId *string `json:"sourceManagedInstanceId,omitempty"`

	// State: The state of the managed instance.
	State *string `json:"state,omitempty"`

	// StorageSizeInGB: Storage size in GB. Minimum value: 32. Maximum value: 16384. Increments of 32 GB allowed only. Maximum
	// value depends on the selected hardware family and number of vCores.
	StorageSizeInGB *int `json:"storageSizeInGB,omitempty"`

	// SubnetId: Subnet resource ID for the managed instance.
	SubnetId *string `json:"subnetId,omitempty"`

	// TimezoneId: Id of the timezone. Allowed values are timezones supported by Windows.
	// Windows keeps details on supported timezones, including the id, in registry under
	// KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
	// You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.
	// List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	// An example of valid timezone id is "Pacific Standard Time" or "W. Europe Standard Time".
	TimezoneId *string `json:"timezoneId,omitempty"`

	// VCores: The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
	VCores *int `json:"vCores,omitempty"`

	// ZoneRedundant: Whether or not the multi-az is enabled.
	ZoneRedundant *bool `json:"zoneRedundant,omitempty"`
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentity_STATUS_ARM struct {
	// PrincipalId: The Azure Active Directory principal id.
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: The Azure Active Directory tenant id.
	TenantId *string `json:"tenantId,omitempty"`

	// Type: The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active
	// Directory principal for the resource.
	Type *ResourceIdentity_Type_STATUS `json:"type,omitempty"`

	// UserAssignedIdentities: The resource ids of the user assigned identities to use
	UserAssignedIdentities map[string]UserIdentity_STATUS_ARM `json:"userAssignedIdentities,omitempty"`
}

// An ARM Resource SKU.
type Sku_STATUS_ARM struct {
	// Capacity: Capacity of the particular SKU.
	Capacity *int `json:"capacity,omitempty"`

	// Family: If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `json:"family,omitempty"`

	// Name: The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name *string `json:"name,omitempty"`

	// Size: Size of the particular SKU
	Size *string `json:"size,omitempty"`

	// Tier: The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `json:"tier,omitempty"`
}

// Properties of a active directory administrator.
type ManagedInstanceExternalAdministrator_STATUS_ARM struct {
	// AdministratorType: Type of the sever administrator.
	AdministratorType *ManagedInstanceExternalAdministrator_AdministratorType_STATUS `json:"administratorType,omitempty"`

	// AzureADOnlyAuthentication: Azure Active Directory only Authentication enabled.
	AzureADOnlyAuthentication *bool `json:"azureADOnlyAuthentication,omitempty"`

	// Login: Login name of the server administrator.
	Login *string `json:"login,omitempty"`

	// PrincipalType: Principal Type of the sever administrator.
	PrincipalType *ManagedInstanceExternalAdministrator_PrincipalType_STATUS `json:"principalType,omitempty"`

	// Sid: SID (object ID) of the server administrator.
	Sid *string `json:"sid,omitempty"`

	// TenantId: Tenant ID of the administrator.
	TenantId *string `json:"tenantId,omitempty"`
}

// A private endpoint connection under a managed instance
type ManagedInstancePecProperty_STATUS_ARM struct {
	// Id: Resource ID.
	Id *string `json:"id,omitempty"`

	// Properties: Private endpoint connection properties
	Properties *ManagedInstancePrivateEndpointConnectionProperties_STATUS_ARM `json:"properties,omitempty"`
}

type ResourceIdentity_Type_STATUS string

const (
	ResourceIdentity_Type_STATUS_None                       = ResourceIdentity_Type_STATUS("None")
	ResourceIdentity_Type_STATUS_SystemAssigned             = ResourceIdentity_Type_STATUS("SystemAssigned")
	ResourceIdentity_Type_STATUS_SystemAssignedUserAssigned = ResourceIdentity_Type_STATUS("SystemAssigned,UserAssigned")
	ResourceIdentity_Type_STATUS_UserAssigned               = ResourceIdentity_Type_STATUS("UserAssigned")
)

// The managed instance's service principal configuration for a resource.
type ServicePrincipal_STATUS_ARM struct {
	// ClientId: The Azure Active Directory application client id.
	ClientId *string `json:"clientId,omitempty"`

	// PrincipalId: The Azure Active Directory application object id.
	PrincipalId *string `json:"principalId,omitempty"`

	// TenantId: The Azure Active Directory tenant id.
	TenantId *string `json:"tenantId,omitempty"`

	// Type: Service principal type.
	Type *ServicePrincipal_Type_STATUS `json:"type,omitempty"`
}

// Azure Active Directory identity configuration for a resource.
type UserIdentity_STATUS_ARM struct {
	// ClientId: The Azure Active Directory client id.
	ClientId *string `json:"clientId,omitempty"`

	// PrincipalId: The Azure Active Directory principal id.
	PrincipalId *string `json:"principalId,omitempty"`
}

// Properties of a private endpoint connection.
type ManagedInstancePrivateEndpointConnectionProperties_STATUS_ARM struct {
	// PrivateEndpoint: Private endpoint which the connection belongs to.
	PrivateEndpoint *ManagedInstancePrivateEndpointProperty_STATUS_ARM `json:"privateEndpoint,omitempty"`

	// PrivateLinkServiceConnectionState: Connection State of the Private Endpoint Connection.
	PrivateLinkServiceConnectionState *ManagedInstancePrivateLinkServiceConnectionStateProperty_STATUS_ARM `json:"privateLinkServiceConnectionState,omitempty"`

	// ProvisioningState: State of the Private Endpoint Connection.
	ProvisioningState *string `json:"provisioningState,omitempty"`
}

type ManagedInstancePrivateEndpointProperty_STATUS_ARM struct {
	// Id: Resource id of the private endpoint.
	Id *string `json:"id,omitempty"`
}

type ManagedInstancePrivateLinkServiceConnectionStateProperty_STATUS_ARM struct {
	// ActionsRequired: The private link service connection description.
	ActionsRequired *string `json:"actionsRequired,omitempty"`

	// Description: The private link service connection description.
	Description *string `json:"description,omitempty"`

	// Status: The private link service connection status.
	Status *string `json:"status,omitempty"`
}
