// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type ManagedInstances_Database_Spec_ARM struct {
	// Location: Resource location.
	Location *string `json:"location,omitempty"`
	Name     string  `json:"name,omitempty"`

	// Properties: Resource properties.
	Properties *ManagedDatabaseProperties_ARM `json:"properties,omitempty"`

	// Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`
}

var _ genruntime.ARMResourceSpec = &ManagedInstances_Database_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (database ManagedInstances_Database_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (database *ManagedInstances_Database_Spec_ARM) GetName() string {
	return database.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Sql/managedInstances/databases"
func (database *ManagedInstances_Database_Spec_ARM) GetType() string {
	return "Microsoft.Sql/managedInstances/databases"
}

// The managed database's properties.
type ManagedDatabaseProperties_ARM struct {
	// AutoCompleteRestore: Whether to auto complete restore of this managed database.
	AutoCompleteRestore *bool `json:"autoCompleteRestore,omitempty"`

	// CatalogCollation: Collation of the metadata catalog.
	CatalogCollation *ManagedDatabaseProperties_CatalogCollation `json:"catalogCollation,omitempty"`

	// Collation: Collation of the managed database.
	Collation *string `json:"collation,omitempty"`

	// CreateMode: Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of
	// an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified.
	// RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and
	// StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup.
	// RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.
	// RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup
	// (longTermRetentionBackupResourceId required).
	CreateMode *ManagedDatabaseProperties_CreateMode `json:"createMode,omitempty"`

	// LastBackupName: Last backup file name for restore of this managed database.
	LastBackupName                    *string `json:"lastBackupName,omitempty"`
	LongTermRetentionBackupResourceId *string `json:"longTermRetentionBackupResourceId,omitempty"`
	RecoverableDatabaseId             *string `json:"recoverableDatabaseId,omitempty"`
	RestorableDroppedDatabaseId       *string `json:"restorableDroppedDatabaseId,omitempty"`

	// RestorePointInTime: Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in
	// time (ISO8601 format) of the source database that will be restored to create the new database.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`
	SourceDatabaseId   *string `json:"sourceDatabaseId,omitempty"`

	// StorageContainerSasToken: Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the
	// storage container sas token.
	StorageContainerSasToken *string `json:"storageContainerSasToken,omitempty"`

	// StorageContainerUri: Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of
	// the storage container where backups for this restore are stored.
	StorageContainerUri *string `json:"storageContainerUri,omitempty"`
}
