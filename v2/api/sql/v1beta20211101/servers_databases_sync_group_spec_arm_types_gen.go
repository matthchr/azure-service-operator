// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20211101

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type Servers_Databases_SyncGroup_Spec_ARM struct {
	Name string `json:"name,omitempty"`

	// Properties: Resource properties.
	Properties *SyncGroupProperties_ARM `json:"properties,omitempty"`

	// Sku: The name and capacity of the SKU.
	Sku *Sku_ARM `json:"sku,omitempty"`
}

var _ genruntime.ARMResourceSpec = &Servers_Databases_SyncGroup_Spec_ARM{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (group Servers_Databases_SyncGroup_Spec_ARM) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetName returns the Name of the resource
func (group *Servers_Databases_SyncGroup_Spec_ARM) GetName() string {
	return group.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Sql/servers/databases/syncGroups"
func (group *Servers_Databases_SyncGroup_Spec_ARM) GetType() string {
	return "Microsoft.Sql/servers/databases/syncGroups"
}

// Properties of a sync group.
type SyncGroupProperties_ARM struct {
	// ConflictLoggingRetentionInDays: Conflict logging retention period.
	ConflictLoggingRetentionInDays *int `json:"conflictLoggingRetentionInDays,omitempty"`

	// ConflictResolutionPolicy: Conflict resolution policy of the sync group.
	ConflictResolutionPolicy *SyncGroupProperties_ConflictResolutionPolicy `json:"conflictResolutionPolicy,omitempty"`

	// EnableConflictLogging: If conflict logging is enabled.
	EnableConflictLogging *bool `json:"enableConflictLogging,omitempty"`

	// HubDatabasePassword: Password for the sync group hub database credential.
	HubDatabasePassword *string `json:"hubDatabasePassword,omitempty"`

	// HubDatabaseUserName: User name for the sync group hub database credential.
	HubDatabaseUserName *string `json:"hubDatabaseUserName,omitempty"`

	// Interval: Sync interval of the sync group.
	Interval *int `json:"interval,omitempty"`

	// Schema: Sync schema of the sync group.
	Schema         *SyncGroupSchema_ARM `json:"schema,omitempty"`
	SyncDatabaseId *string              `json:"syncDatabaseId,omitempty"`

	// UsePrivateLinkConnection: If use private link connection is enabled.
	UsePrivateLinkConnection *bool `json:"usePrivateLinkConnection,omitempty"`
}

// Properties of sync group schema.
type SyncGroupSchema_ARM struct {
	// MasterSyncMemberName: Name of master sync member where the schema is from.
	MasterSyncMemberName *string `json:"masterSyncMemberName,omitempty"`

	// Tables: List of tables in sync group schema.
	Tables []SyncGroupSchemaTable_ARM `json:"tables,omitempty"`
}

// Properties of table in sync group schema.
type SyncGroupSchemaTable_ARM struct {
	// Columns: List of columns in sync group schema.
	Columns []SyncGroupSchemaTableColumn_ARM `json:"columns,omitempty"`

	// QuotedName: Quoted name of sync group schema table.
	QuotedName *string `json:"quotedName,omitempty"`
}

// Properties of column in sync group table.
type SyncGroupSchemaTableColumn_ARM struct {
	// DataSize: Data size of the column.
	DataSize *string `json:"dataSize,omitempty"`

	// DataType: Data type of the column.
	DataType *string `json:"dataType,omitempty"`

	// QuotedName: Quoted name of sync group table column.
	QuotedName *string `json:"quotedName,omitempty"`
}
