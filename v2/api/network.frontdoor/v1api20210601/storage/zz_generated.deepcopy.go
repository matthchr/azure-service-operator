//go:build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backend) DeepCopyInto(out *Backend) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.BackendHostHeader != nil {
		in, out := &in.BackendHostHeader, &out.BackendHostHeader
		*out = new(string)
		**out = **in
	}
	if in.EnabledState != nil {
		in, out := &in.EnabledState, &out.EnabledState
		*out = new(string)
		**out = **in
	}
	if in.HttpPort != nil {
		in, out := &in.HttpPort, &out.HttpPort
		*out = new(int)
		**out = **in
	}
	if in.HttpsPort != nil {
		in, out := &in.HttpsPort, &out.HttpsPort
		*out = new(int)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PrivateLinkAlias != nil {
		in, out := &in.PrivateLinkAlias, &out.PrivateLinkAlias
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkApprovalMessage != nil {
		in, out := &in.PrivateLinkApprovalMessage, &out.PrivateLinkApprovalMessage
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkLocation != nil {
		in, out := &in.PrivateLinkLocation, &out.PrivateLinkLocation
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkResourceReference != nil {
		in, out := &in.PrivateLinkResourceReference, &out.PrivateLinkResourceReference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backend.
func (in *Backend) DeepCopy() *Backend {
	if in == nil {
		return nil
	}
	out := new(Backend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendPool) DeepCopyInto(out *BackendPool) {
	*out = *in
	if in.Backends != nil {
		in, out := &in.Backends, &out.Backends
		*out = make([]Backend, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthProbeSettings != nil {
		in, out := &in.HealthProbeSettings, &out.HealthProbeSettings
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancingSettings != nil {
		in, out := &in.LoadBalancingSettings, &out.LoadBalancingSettings
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendPool.
func (in *BackendPool) DeepCopy() *BackendPool {
	if in == nil {
		return nil
	}
	out := new(BackendPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendPool_STATUS) DeepCopyInto(out *BackendPool_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendPool_STATUS.
func (in *BackendPool_STATUS) DeepCopy() *BackendPool_STATUS {
	if in == nil {
		return nil
	}
	out := new(BackendPool_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendPoolsSettings) DeepCopyInto(out *BackendPoolsSettings) {
	*out = *in
	if in.EnforceCertificateNameCheck != nil {
		in, out := &in.EnforceCertificateNameCheck, &out.EnforceCertificateNameCheck
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SendRecvTimeoutSeconds != nil {
		in, out := &in.SendRecvTimeoutSeconds, &out.SendRecvTimeoutSeconds
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendPoolsSettings.
func (in *BackendPoolsSettings) DeepCopy() *BackendPoolsSettings {
	if in == nil {
		return nil
	}
	out := new(BackendPoolsSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendPoolsSettings_STATUS) DeepCopyInto(out *BackendPoolsSettings_STATUS) {
	*out = *in
	if in.EnforceCertificateNameCheck != nil {
		in, out := &in.EnforceCertificateNameCheck, &out.EnforceCertificateNameCheck
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SendRecvTimeoutSeconds != nil {
		in, out := &in.SendRecvTimeoutSeconds, &out.SendRecvTimeoutSeconds
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendPoolsSettings_STATUS.
func (in *BackendPoolsSettings_STATUS) DeepCopy() *BackendPoolsSettings_STATUS {
	if in == nil {
		return nil
	}
	out := new(BackendPoolsSettings_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheConfiguration) DeepCopyInto(out *CacheConfiguration) {
	*out = *in
	if in.CacheDuration != nil {
		in, out := &in.CacheDuration, &out.CacheDuration
		*out = new(string)
		**out = **in
	}
	if in.DynamicCompression != nil {
		in, out := &in.DynamicCompression, &out.DynamicCompression
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.QueryParameterStripDirective != nil {
		in, out := &in.QueryParameterStripDirective, &out.QueryParameterStripDirective
		*out = new(string)
		**out = **in
	}
	if in.QueryParameters != nil {
		in, out := &in.QueryParameters, &out.QueryParameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheConfiguration.
func (in *CacheConfiguration) DeepCopy() *CacheConfiguration {
	if in == nil {
		return nil
	}
	out := new(CacheConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheConfiguration_STATUS) DeepCopyInto(out *CacheConfiguration_STATUS) {
	*out = *in
	if in.CacheDuration != nil {
		in, out := &in.CacheDuration, &out.CacheDuration
		*out = new(string)
		**out = **in
	}
	if in.DynamicCompression != nil {
		in, out := &in.DynamicCompression, &out.DynamicCompression
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.QueryParameterStripDirective != nil {
		in, out := &in.QueryParameterStripDirective, &out.QueryParameterStripDirective
		*out = new(string)
		**out = **in
	}
	if in.QueryParameters != nil {
		in, out := &in.QueryParameters, &out.QueryParameters
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheConfiguration_STATUS.
func (in *CacheConfiguration_STATUS) DeepCopy() *CacheConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(CacheConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingConfiguration) DeepCopyInto(out *ForwardingConfiguration) {
	*out = *in
	if in.BackendPool != nil {
		in, out := &in.BackendPool, &out.BackendPool
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheConfiguration != nil {
		in, out := &in.CacheConfiguration, &out.CacheConfiguration
		*out = new(CacheConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomForwardingPath != nil {
		in, out := &in.CustomForwardingPath, &out.CustomForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.OdataType != nil {
		in, out := &in.OdataType, &out.OdataType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingConfiguration.
func (in *ForwardingConfiguration) DeepCopy() *ForwardingConfiguration {
	if in == nil {
		return nil
	}
	out := new(ForwardingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingConfiguration_STATUS) DeepCopyInto(out *ForwardingConfiguration_STATUS) {
	*out = *in
	if in.BackendPool != nil {
		in, out := &in.BackendPool, &out.BackendPool
		*out = new(SubResource_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheConfiguration != nil {
		in, out := &in.CacheConfiguration, &out.CacheConfiguration
		*out = new(CacheConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomForwardingPath != nil {
		in, out := &in.CustomForwardingPath, &out.CustomForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	if in.OdataType != nil {
		in, out := &in.OdataType, &out.OdataType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingConfiguration_STATUS.
func (in *ForwardingConfiguration_STATUS) DeepCopy() *ForwardingConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(ForwardingConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontDoor) DeepCopyInto(out *FrontDoor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontDoor.
func (in *FrontDoor) DeepCopy() *FrontDoor {
	if in == nil {
		return nil
	}
	out := new(FrontDoor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontDoor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontDoorList) DeepCopyInto(out *FrontDoorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FrontDoor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontDoorList.
func (in *FrontDoorList) DeepCopy() *FrontDoorList {
	if in == nil {
		return nil
	}
	out := new(FrontDoorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontDoorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontDoor_STATUS) DeepCopyInto(out *FrontDoor_STATUS) {
	*out = *in
	if in.BackendPools != nil {
		in, out := &in.BackendPools, &out.BackendPools
		*out = make([]BackendPool_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPoolsSettings != nil {
		in, out := &in.BackendPoolsSettings, &out.BackendPoolsSettings
		*out = new(BackendPoolsSettings_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnabledState != nil {
		in, out := &in.EnabledState, &out.EnabledState
		*out = new(string)
		**out = **in
	}
	if in.ExtendedProperties != nil {
		in, out := &in.ExtendedProperties, &out.ExtendedProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.FrontdoorId != nil {
		in, out := &in.FrontdoorId, &out.FrontdoorId
		*out = new(string)
		**out = **in
	}
	if in.FrontendEndpoints != nil {
		in, out := &in.FrontendEndpoints, &out.FrontendEndpoints
		*out = make([]FrontendEndpoint_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthProbeSettings != nil {
		in, out := &in.HealthProbeSettings, &out.HealthProbeSettings
		*out = make([]HealthProbeSettingsModel_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingSettings != nil {
		in, out := &in.LoadBalancingSettings, &out.LoadBalancingSettings
		*out = make([]LoadBalancingSettingsModel_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ResourceState != nil {
		in, out := &in.ResourceState, &out.ResourceState
		*out = new(string)
		**out = **in
	}
	if in.RoutingRules != nil {
		in, out := &in.RoutingRules, &out.RoutingRules
		*out = make([]RoutingRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RulesEngines != nil {
		in, out := &in.RulesEngines, &out.RulesEngines
		*out = make([]RulesEngine_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontDoor_STATUS.
func (in *FrontDoor_STATUS) DeepCopy() *FrontDoor_STATUS {
	if in == nil {
		return nil
	}
	out := new(FrontDoor_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontDoor_Spec) DeepCopyInto(out *FrontDoor_Spec) {
	*out = *in
	if in.BackendPools != nil {
		in, out := &in.BackendPools, &out.BackendPools
		*out = make([]BackendPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPoolsSettings != nil {
		in, out := &in.BackendPoolsSettings, &out.BackendPoolsSettings
		*out = new(BackendPoolsSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.EnabledState != nil {
		in, out := &in.EnabledState, &out.EnabledState
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.FrontendEndpoints != nil {
		in, out := &in.FrontendEndpoints, &out.FrontendEndpoints
		*out = make([]FrontendEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthProbeSettings != nil {
		in, out := &in.HealthProbeSettings, &out.HealthProbeSettings
		*out = make([]HealthProbeSettingsModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingSettings != nil {
		in, out := &in.LoadBalancingSettings, &out.LoadBalancingSettings
		*out = make([]LoadBalancingSettingsModel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RoutingRules != nil {
		in, out := &in.RoutingRules, &out.RoutingRules
		*out = make([]RoutingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontDoor_Spec.
func (in *FrontDoor_Spec) DeepCopy() *FrontDoor_Spec {
	if in == nil {
		return nil
	}
	out := new(FrontDoor_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontDoors_RulesEngine_STATUS) DeepCopyInto(out *FrontDoors_RulesEngine_STATUS) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ResourceState != nil {
		in, out := &in.ResourceState, &out.ResourceState
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesEngineRule_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontDoors_RulesEngine_STATUS.
func (in *FrontDoors_RulesEngine_STATUS) DeepCopy() *FrontDoors_RulesEngine_STATUS {
	if in == nil {
		return nil
	}
	out := new(FrontDoors_RulesEngine_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontDoors_RulesEngine_Spec) DeepCopyInto(out *FrontDoors_RulesEngine_Spec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(genruntime.KnownResourceReference)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesEngineRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontDoors_RulesEngine_Spec.
func (in *FrontDoors_RulesEngine_Spec) DeepCopy() *FrontDoors_RulesEngine_Spec {
	if in == nil {
		return nil
	}
	out := new(FrontDoors_RulesEngine_Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendEndpoint) DeepCopyInto(out *FrontendEndpoint) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SessionAffinityEnabledState != nil {
		in, out := &in.SessionAffinityEnabledState, &out.SessionAffinityEnabledState
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinityTtlSeconds != nil {
		in, out := &in.SessionAffinityTtlSeconds, &out.SessionAffinityTtlSeconds
		*out = new(int)
		**out = **in
	}
	if in.WebApplicationFirewallPolicyLink != nil {
		in, out := &in.WebApplicationFirewallPolicyLink, &out.WebApplicationFirewallPolicyLink
		*out = new(FrontendEndpointProperties_WebApplicationFirewallPolicyLink)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendEndpoint.
func (in *FrontendEndpoint) DeepCopy() *FrontendEndpoint {
	if in == nil {
		return nil
	}
	out := new(FrontendEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendEndpointProperties_WebApplicationFirewallPolicyLink) DeepCopyInto(out *FrontendEndpointProperties_WebApplicationFirewallPolicyLink) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendEndpointProperties_WebApplicationFirewallPolicyLink.
func (in *FrontendEndpointProperties_WebApplicationFirewallPolicyLink) DeepCopy() *FrontendEndpointProperties_WebApplicationFirewallPolicyLink {
	if in == nil {
		return nil
	}
	out := new(FrontendEndpointProperties_WebApplicationFirewallPolicyLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendEndpoint_STATUS) DeepCopyInto(out *FrontendEndpoint_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendEndpoint_STATUS.
func (in *FrontendEndpoint_STATUS) DeepCopy() *FrontendEndpoint_STATUS {
	if in == nil {
		return nil
	}
	out := new(FrontendEndpoint_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderAction) DeepCopyInto(out *HeaderAction) {
	*out = *in
	if in.HeaderActionType != nil {
		in, out := &in.HeaderActionType, &out.HeaderActionType
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderAction.
func (in *HeaderAction) DeepCopy() *HeaderAction {
	if in == nil {
		return nil
	}
	out := new(HeaderAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderAction_STATUS) DeepCopyInto(out *HeaderAction_STATUS) {
	*out = *in
	if in.HeaderActionType != nil {
		in, out := &in.HeaderActionType, &out.HeaderActionType
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderAction_STATUS.
func (in *HeaderAction_STATUS) DeepCopy() *HeaderAction_STATUS {
	if in == nil {
		return nil
	}
	out := new(HeaderAction_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthProbeSettingsModel) DeepCopyInto(out *HealthProbeSettingsModel) {
	*out = *in
	if in.EnabledState != nil {
		in, out := &in.EnabledState, &out.EnabledState
		*out = new(string)
		**out = **in
	}
	if in.HealthProbeMethod != nil {
		in, out := &in.HealthProbeMethod, &out.HealthProbeMethod
		*out = new(string)
		**out = **in
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthProbeSettingsModel.
func (in *HealthProbeSettingsModel) DeepCopy() *HealthProbeSettingsModel {
	if in == nil {
		return nil
	}
	out := new(HealthProbeSettingsModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthProbeSettingsModel_STATUS) DeepCopyInto(out *HealthProbeSettingsModel_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthProbeSettingsModel_STATUS.
func (in *HealthProbeSettingsModel_STATUS) DeepCopy() *HealthProbeSettingsModel_STATUS {
	if in == nil {
		return nil
	}
	out := new(HealthProbeSettingsModel_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingSettingsModel) DeepCopyInto(out *LoadBalancingSettingsModel) {
	*out = *in
	if in.AdditionalLatencyMilliseconds != nil {
		in, out := &in.AdditionalLatencyMilliseconds, &out.AdditionalLatencyMilliseconds
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SampleSize != nil {
		in, out := &in.SampleSize, &out.SampleSize
		*out = new(int)
		**out = **in
	}
	if in.SuccessfulSamplesRequired != nil {
		in, out := &in.SuccessfulSamplesRequired, &out.SuccessfulSamplesRequired
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingSettingsModel.
func (in *LoadBalancingSettingsModel) DeepCopy() *LoadBalancingSettingsModel {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingSettingsModel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancingSettingsModel_STATUS) DeepCopyInto(out *LoadBalancingSettingsModel_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancingSettingsModel_STATUS.
func (in *LoadBalancingSettingsModel_STATUS) DeepCopy() *LoadBalancingSettingsModel_STATUS {
	if in == nil {
		return nil
	}
	out := new(LoadBalancingSettingsModel_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectConfiguration) DeepCopyInto(out *RedirectConfiguration) {
	*out = *in
	if in.CustomFragment != nil {
		in, out := &in.CustomFragment, &out.CustomFragment
		*out = new(string)
		**out = **in
	}
	if in.CustomHost != nil {
		in, out := &in.CustomHost, &out.CustomHost
		*out = new(string)
		**out = **in
	}
	if in.CustomPath != nil {
		in, out := &in.CustomPath, &out.CustomPath
		*out = new(string)
		**out = **in
	}
	if in.CustomQueryString != nil {
		in, out := &in.CustomQueryString, &out.CustomQueryString
		*out = new(string)
		**out = **in
	}
	if in.OdataType != nil {
		in, out := &in.OdataType, &out.OdataType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectConfiguration.
func (in *RedirectConfiguration) DeepCopy() *RedirectConfiguration {
	if in == nil {
		return nil
	}
	out := new(RedirectConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectConfiguration_STATUS) DeepCopyInto(out *RedirectConfiguration_STATUS) {
	*out = *in
	if in.CustomFragment != nil {
		in, out := &in.CustomFragment, &out.CustomFragment
		*out = new(string)
		**out = **in
	}
	if in.CustomHost != nil {
		in, out := &in.CustomHost, &out.CustomHost
		*out = new(string)
		**out = **in
	}
	if in.CustomPath != nil {
		in, out := &in.CustomPath, &out.CustomPath
		*out = new(string)
		**out = **in
	}
	if in.CustomQueryString != nil {
		in, out := &in.CustomQueryString, &out.CustomQueryString
		*out = new(string)
		**out = **in
	}
	if in.OdataType != nil {
		in, out := &in.OdataType, &out.OdataType
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectConfiguration_STATUS.
func (in *RedirectConfiguration_STATUS) DeepCopy() *RedirectConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(RedirectConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteConfiguration) DeepCopyInto(out *RouteConfiguration) {
	*out = *in
	if in.MicrosoftAzureFrontDoorModelsFrontdoorForwarding != nil {
		in, out := &in.MicrosoftAzureFrontDoorModelsFrontdoorForwarding, &out.MicrosoftAzureFrontDoorModelsFrontdoorForwarding
		*out = new(ForwardingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MicrosoftAzureFrontDoorModelsFrontdoorRedirect != nil {
		in, out := &in.MicrosoftAzureFrontDoorModelsFrontdoorRedirect, &out.MicrosoftAzureFrontDoorModelsFrontdoorRedirect
		*out = new(RedirectConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteConfiguration.
func (in *RouteConfiguration) DeepCopy() *RouteConfiguration {
	if in == nil {
		return nil
	}
	out := new(RouteConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteConfiguration_STATUS) DeepCopyInto(out *RouteConfiguration_STATUS) {
	*out = *in
	if in.MicrosoftAzureFrontDoorModelsFrontdoorForwarding != nil {
		in, out := &in.MicrosoftAzureFrontDoorModelsFrontdoorForwarding, &out.MicrosoftAzureFrontDoorModelsFrontdoorForwarding
		*out = new(ForwardingConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.MicrosoftAzureFrontDoorModelsFrontdoorRedirect != nil {
		in, out := &in.MicrosoftAzureFrontDoorModelsFrontdoorRedirect, &out.MicrosoftAzureFrontDoorModelsFrontdoorRedirect
		*out = new(RedirectConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteConfiguration_STATUS.
func (in *RouteConfiguration_STATUS) DeepCopy() *RouteConfiguration_STATUS {
	if in == nil {
		return nil
	}
	out := new(RouteConfiguration_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingRule) DeepCopyInto(out *RoutingRule) {
	*out = *in
	if in.AcceptedProtocols != nil {
		in, out := &in.AcceptedProtocols, &out.AcceptedProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnabledState != nil {
		in, out := &in.EnabledState, &out.EnabledState
		*out = new(string)
		**out = **in
	}
	if in.FrontendEndpoints != nil {
		in, out := &in.FrontendEndpoints, &out.FrontendEndpoints
		*out = make([]SubResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PatternsToMatch != nil {
		in, out := &in.PatternsToMatch, &out.PatternsToMatch
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RouteConfiguration != nil {
		in, out := &in.RouteConfiguration, &out.RouteConfiguration
		*out = new(RouteConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RulesEngine != nil {
		in, out := &in.RulesEngine, &out.RulesEngine
		*out = new(SubResource)
		(*in).DeepCopyInto(*out)
	}
	if in.WebApplicationFirewallPolicyLink != nil {
		in, out := &in.WebApplicationFirewallPolicyLink, &out.WebApplicationFirewallPolicyLink
		*out = new(RoutingRuleProperties_WebApplicationFirewallPolicyLink)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingRule.
func (in *RoutingRule) DeepCopy() *RoutingRule {
	if in == nil {
		return nil
	}
	out := new(RoutingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingRuleProperties_WebApplicationFirewallPolicyLink) DeepCopyInto(out *RoutingRuleProperties_WebApplicationFirewallPolicyLink) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingRuleProperties_WebApplicationFirewallPolicyLink.
func (in *RoutingRuleProperties_WebApplicationFirewallPolicyLink) DeepCopy() *RoutingRuleProperties_WebApplicationFirewallPolicyLink {
	if in == nil {
		return nil
	}
	out := new(RoutingRuleProperties_WebApplicationFirewallPolicyLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingRule_STATUS) DeepCopyInto(out *RoutingRule_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingRule_STATUS.
func (in *RoutingRule_STATUS) DeepCopy() *RoutingRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(RoutingRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngine) DeepCopyInto(out *RulesEngine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngine.
func (in *RulesEngine) DeepCopy() *RulesEngine {
	if in == nil {
		return nil
	}
	out := new(RulesEngine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RulesEngine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineAction) DeepCopyInto(out *RulesEngineAction) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequestHeaderActions != nil {
		in, out := &in.RequestHeaderActions, &out.RequestHeaderActions
		*out = make([]HeaderAction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderActions != nil {
		in, out := &in.ResponseHeaderActions, &out.ResponseHeaderActions
		*out = make([]HeaderAction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteConfigurationOverride != nil {
		in, out := &in.RouteConfigurationOverride, &out.RouteConfigurationOverride
		*out = new(RouteConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineAction.
func (in *RulesEngineAction) DeepCopy() *RulesEngineAction {
	if in == nil {
		return nil
	}
	out := new(RulesEngineAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineAction_STATUS) DeepCopyInto(out *RulesEngineAction_STATUS) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RequestHeaderActions != nil {
		in, out := &in.RequestHeaderActions, &out.RequestHeaderActions
		*out = make([]HeaderAction_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderActions != nil {
		in, out := &in.ResponseHeaderActions, &out.ResponseHeaderActions
		*out = make([]HeaderAction_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteConfigurationOverride != nil {
		in, out := &in.RouteConfigurationOverride, &out.RouteConfigurationOverride
		*out = new(RouteConfiguration_STATUS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineAction_STATUS.
func (in *RulesEngineAction_STATUS) DeepCopy() *RulesEngineAction_STATUS {
	if in == nil {
		return nil
	}
	out := new(RulesEngineAction_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineList) DeepCopyInto(out *RulesEngineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RulesEngine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineList.
func (in *RulesEngineList) DeepCopy() *RulesEngineList {
	if in == nil {
		return nil
	}
	out := new(RulesEngineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RulesEngineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineMatchCondition) DeepCopyInto(out *RulesEngineMatchCondition) {
	*out = *in
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RulesEngineMatchValue != nil {
		in, out := &in.RulesEngineMatchValue, &out.RulesEngineMatchValue
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RulesEngineMatchVariable != nil {
		in, out := &in.RulesEngineMatchVariable, &out.RulesEngineMatchVariable
		*out = new(string)
		**out = **in
	}
	if in.RulesEngineOperator != nil {
		in, out := &in.RulesEngineOperator, &out.RulesEngineOperator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineMatchCondition.
func (in *RulesEngineMatchCondition) DeepCopy() *RulesEngineMatchCondition {
	if in == nil {
		return nil
	}
	out := new(RulesEngineMatchCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineMatchCondition_STATUS) DeepCopyInto(out *RulesEngineMatchCondition_STATUS) {
	*out = *in
	if in.NegateCondition != nil {
		in, out := &in.NegateCondition, &out.NegateCondition
		*out = new(bool)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RulesEngineMatchValue != nil {
		in, out := &in.RulesEngineMatchValue, &out.RulesEngineMatchValue
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RulesEngineMatchVariable != nil {
		in, out := &in.RulesEngineMatchVariable, &out.RulesEngineMatchVariable
		*out = new(string)
		**out = **in
	}
	if in.RulesEngineOperator != nil {
		in, out := &in.RulesEngineOperator, &out.RulesEngineOperator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineMatchCondition_STATUS.
func (in *RulesEngineMatchCondition_STATUS) DeepCopy() *RulesEngineMatchCondition_STATUS {
	if in == nil {
		return nil
	}
	out := new(RulesEngineMatchCondition_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineRule) DeepCopyInto(out *RulesEngineRule) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(RulesEngineAction)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchConditions != nil {
		in, out := &in.MatchConditions, &out.MatchConditions
		*out = make([]RulesEngineMatchCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchProcessingBehavior != nil {
		in, out := &in.MatchProcessingBehavior, &out.MatchProcessingBehavior
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineRule.
func (in *RulesEngineRule) DeepCopy() *RulesEngineRule {
	if in == nil {
		return nil
	}
	out := new(RulesEngineRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngineRule_STATUS) DeepCopyInto(out *RulesEngineRule_STATUS) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(RulesEngineAction_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchConditions != nil {
		in, out := &in.MatchConditions, &out.MatchConditions
		*out = make([]RulesEngineMatchCondition_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchProcessingBehavior != nil {
		in, out := &in.MatchProcessingBehavior, &out.MatchProcessingBehavior
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngineRule_STATUS.
func (in *RulesEngineRule_STATUS) DeepCopy() *RulesEngineRule_STATUS {
	if in == nil {
		return nil
	}
	out := new(RulesEngineRule_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesEngine_STATUS) DeepCopyInto(out *RulesEngine_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesEngine_STATUS.
func (in *RulesEngine_STATUS) DeepCopy() *RulesEngine_STATUS {
	if in == nil {
		return nil
	}
	out := new(RulesEngine_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResource) DeepCopyInto(out *SubResource) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResource.
func (in *SubResource) DeepCopy() *SubResource {
	if in == nil {
		return nil
	}
	out := new(SubResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubResource_STATUS) DeepCopyInto(out *SubResource_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubResource_STATUS.
func (in *SubResource_STATUS) DeepCopy() *SubResource_STATUS {
	if in == nil {
		return nil
	}
	out := new(SubResource_STATUS)
	in.DeepCopyInto(out)
	return out
}
